<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					mc:Ignorable="d">

	<Color x:Key="ControlReadOnlyBackground">#FFE4E4E4</Color>
	<Color x:Key="ControlReadOnlyBorder">#FFF2FF9A</Color>
	<Color x:Key="ControlReadOnlyForeground">#FF161858</Color>

	<Color x:Key="ControlIsEnabledBackground">WhiteSmoke</Color>
	<Color x:Key="ControlIsEnabledBorder">#FFB4B4B4</Color>
	<Color x:Key="ControlIsEnabledForeground">#FFE4E4E4</Color>

	<!--<ControlTemplate x:Key="validationTemplate">
		<Grid>
			<Border BorderBrush="Red"
					BorderThickness="2"
					CornerRadius="4">
				<AdornedElementPlaceholder x:Name="adorner" />
			</Border>
			<Image Width="25"
				   Height="25"
				   Margin="0,0,-30,0"
				   HorizontalAlignment="Right"
				   VerticalAlignment="Bottom"
				   Source="/REITs.Application;component/Resources/ValidationIcon.png"
				   ToolTip="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}" />
		</Grid>
	</ControlTemplate>-->

	<Style TargetType="{x:Type ComboBox}">
		<Style.Triggers>
			<Trigger Property="Validation.HasError"
					 Value="True">
				<Setter Property="ToolTip"
						Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type TextBox}">
		<Style.Triggers>
			<Trigger Property="Validation.HasError"
					 Value="True">
				<Setter Property="ToolTip"
						Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
			</Trigger>
		</Style.Triggers>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid x:Name="root"
						  Width="{TemplateBinding Width}"
						  Height="{TemplateBinding Height}">
						<Border x:Name="normalBorder"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="2" />
						<ScrollViewer x:Name="PART_ContentHost"
									  Margin="2"
									  Padding="{TemplateBinding Padding}"
									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									  Background="{x:Null}"
									  BorderThickness="0"
									  IsTabStop="False"
									  TextElement.Foreground="{TemplateBinding Foreground}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="ReadOnly">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
																	  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0"
																 Value="{StaticResource ControlReadOnlyBackground}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
																	  Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0"
																 Value="{StaticResource ControlReadOnlyBorder}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsReadOnly"
								 Value="True">
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource ControlReadOnlyBackground}" />
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush">
								<Setter.Value>
									<SolidColorBrush Color="#FFABADB3" />
								</Setter.Value>
							</Setter>
							<Setter Property="BorderThickness"
									Value="1" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource ControlIsEnabledBackground}" />
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush">
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource ControlIsEnabledBorder}" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="StandardButton"
		   TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="MinWidth"
				Value="60" />
		<Setter Property="MinHeight"
				Value="28" />
		<Setter Property="Height"
				Value="30" />
		<Setter Property="Margin"
				Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Bd"
							BorderBrush="Black"
							BorderThickness="1"
							CornerRadius="5">
						<Border.Background>
							<SolidColorBrush x:Name="borderBrush"
											 Color="White" />
						</Border.Background>
						<ContentPresenter x:Name="content"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="borderBrush"
														Storyboard.TargetProperty="Color"
														To="#FFC5DEC5"
														Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="borderBrush"
														Storyboard.TargetProperty="Color"
														To="White"
														Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="borderBrush"
														Storyboard.TargetProperty="Color"
														To="LightGray"
														Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Tab Item Text Style  -->
	<Style x:Key="TabItemText"
		   TargetType="{x:Type TextBlock}">
		<Style.Triggers>
			<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}"
						 Value="True">
				<Setter Property="Foreground"
						Value="White" />
			</DataTrigger>
			<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}"
						 Value="False">
				<Setter Property="Foreground"
						Value="Navy" />
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="TabItem"
		   TargetType="{x:Type TabItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border Name="Border"
								Margin="0,0,-4,0"
								BorderBrush="DarkGreen"
								BorderThickness="1,1,1,1"
								CornerRadius="2,12,0,0">
							<ContentPresenter x:Name="ContentSite"
											  Margin="12,2,12,2"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  ContentSource="Header"
											  RecognizesAccessKey="True" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected"
								 Value="True">
							<Setter Property="Panel.ZIndex"
									Value="100" />
							<Setter TargetName="Border"
									Property="Background"
									Value="#FFC5DEC5" />
							<Setter TargetName="Border"
									Property="TextBlock.Foreground"
									Value="Black" />
							<Setter TargetName="Border"
									Property="BorderThickness"
									Value="1,1,1,0" />
						</Trigger>
						<Trigger Property="IsSelected"
								 Value="False">
							<Setter TargetName="Border"
									Property="Background"
									Value="#FFD7F9D7" />
							<Setter TargetName="Border"
									Property="TextBlock.Foreground"
									Value="DarkGreen" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SingleBorderedListViewItem"
		   TargetType="{x:Type ListViewItem}">
		<Setter Property="BorderBrush"
				Value="#FFF1F1F1" />
		<Setter Property="BorderThickness"
				Value="0,0,0,1" />
	</Style>

	<SolidColorBrush x:Key="Button.Static.Background"
					 Color="#FFDDDDDD" />
	<SolidColorBrush x:Key="Button.Static.Border"
					 Color="#FF707070" />
	<SolidColorBrush x:Key="Button.MouseOver.Border"
					 Color="#FF3C7FB1" />
	<SolidColorBrush x:Key="Button.Pressed.Background"
					 Color="#FFC4E5F6" />
	<SolidColorBrush x:Key="Button.Pressed.Border"
					 Color="#FF2C628B" />

	<SolidColorBrush x:Key="Button.Disabled.Background"
					 Color="#FFF4F4F4" />
	<SolidColorBrush x:Key="Button.Disabled.Border"
					 Color="#FFADB2B5" />
	<SolidColorBrush x:Key="Button.Disabled.Foreground"
					 Color="#FF838383" />

	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="0"
							   SnapsToDevicePixels="true"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   StrokeDashArray="1 2"
							   StrokeThickness="0" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ReportGridHeader"
		   TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="FontWeight"
				Value="Bold" />
		<Setter Property="Background"
				Value="Green" />
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="Padding"
				Value="10,5,0,5" />
	</Style>

	<Style x:Key="ProgressButtonStyle"
		   TargetType="{x:Type Button}">
		<Setter Property="Background"
				Value="Pink" />
	</Style>

	<Style x:Key="TextBlockHeading"
		   TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize"
				Value="12" />
		<Setter Property="FontWeight"
				Value="Normal" />
	</Style>

	<Style x:Key="DatePickerStyle"
		   TargetType="{x:Type DatePicker}">
		<Setter Property="Foreground"
				Value="#FF333333" />
		<Setter Property="IsTodayHighlighted"
				Value="True" />
		<Setter Property="SelectedDateFormat"
				Value="Short" />
		<Setter Property="Background"
				Value="White" />
		<Setter Property="Padding"
				Value="2" />
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint=".5,0"
									 StartPoint=".5,1">
					<GradientStop Color="#FFA3AEB9"
								  Offset="0" />
					<GradientStop Color="#FF8399A9"
								  Offset="0.375" />
					<GradientStop Color="#FF718597"
								  Offset="0.375" />
					<GradientStop Color="#FF617584"
								  Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DatePicker}">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="PART_DisabledVisual" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="PART_Root"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.Resources>
								<SolidColorBrush x:Key="DisabledBrush"
												 Color="#A5FFFFFF" />
								<ControlTemplate x:Key="DropDownButtonTemplate"
												 TargetType="{x:Type Button}">
									<Grid>
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="0" />
													<VisualTransition GeneratedDuration="0:0:0.1"
																	  To="MouseOver" />
													<VisualTransition GeneratedDuration="0:0:0.1"
																	  To="Pressed" />
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Normal" />
												<VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation Duration="0"
																		To="#FF448DCA"
																		Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
																		Storyboard.TargetName="Background" />
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
																					  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#7FFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
																					  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#CCFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
																					  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#F2FFFFFF" />
														</ColorAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
																					  Storyboard.TargetName="Background">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#FF448DCA" />
														</ColorAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="0"
																					   Duration="00:00:00.001"
																					   Storyboard.TargetProperty="(UIElement.Opacity)"
																					   Storyboard.TargetName="Highlight">
															<SplineDoubleKeyFrame KeyTime="0"
																				  Value="1" />
														</DoubleAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
																					  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#EAFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
																					  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#C6FFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
																					  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#6BFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="00:00:00.001"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
																					  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#F4FFFFFF" />
														</ColorAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Disabled" />
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<Grid Background="#11FFFFFF"
											  FlowDirection="LeftToRight"
											  HorizontalAlignment="Center"
											  Height="18"
											  Margin="0"
											  VerticalAlignment="Center"
											  Width="19">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="23*" />
												<RowDefinition Height="19*" />
												<RowDefinition Height="19*" />
												<RowDefinition Height="19*" />
											</Grid.RowDefinitions>
											<Border x:Name="Highlight"
													BorderBrush="#FF45D6FA"
													BorderThickness="1"
													Grid.ColumnSpan="4"
													CornerRadius="0,0,1,1"
													Margin="-1"
													Opacity="0"
													Grid.Row="0"
													Grid.RowSpan="4" />
											<Border x:Name="Background"
													BorderBrush="#FFFFFFFF"
													BorderThickness="1"
													Background="#FF1F3B53"
													Grid.ColumnSpan="4"
													CornerRadius=".5"
													Margin="0,-1,0,0"
													Opacity="1"
													Grid.Row="1"
													Grid.RowSpan="3" />
											<Border x:Name="BackgroundGradient"
													BorderBrush="#BF000000"
													BorderThickness="1"
													Grid.ColumnSpan="4"
													CornerRadius=".5"
													Margin="0,-1,0,0"
													Opacity="1"
													Grid.Row="1"
													Grid.RowSpan="3">
												<Border.Background>
													<LinearGradientBrush EndPoint=".7,1"
																		 StartPoint=".7,0">
														<GradientStop Color="#FFFFFFFF"
																	  Offset="0" />
														<GradientStop Color="#F9FFFFFF"
																	  Offset="0.375" />
														<GradientStop Color="#E5FFFFFF"
																	  Offset="0.625" />
														<GradientStop Color="#C6FFFFFF"
																	  Offset="1" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
											<Rectangle Grid.ColumnSpan="4"
													   Grid.RowSpan="1"
													   StrokeThickness="1">
												<Rectangle.Fill>
													<LinearGradientBrush EndPoint="0.3,-1.1"
																		 StartPoint="0.46,1.6">
														<GradientStop Color="#FF4084BD" />
														<GradientStop Color="#FFAFCFEA"
																	  Offset="1" />
													</LinearGradientBrush>
												</Rectangle.Fill>
												<Rectangle.Stroke>
													<LinearGradientBrush EndPoint="0.48,-1"
																		 StartPoint="0.48,1.25">
														<GradientStop Color="#FF494949" />
														<GradientStop Color="#FF9F9F9F"
																	  Offset="1" />
													</LinearGradientBrush>
												</Rectangle.Stroke>
											</Rectangle>
											<Path Grid.ColumnSpan="4"
												  Grid.Column="0"
												  Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
												  Fill="#FF2F2F2F"
												  HorizontalAlignment="Center"
												  Margin="4,3,4,3"
												  Grid.Row="1"
												  Grid.RowSpan="3"
												  RenderTransformOrigin="0.5,0.5"
												  Stretch="Fill"
												  VerticalAlignment="Center" />
											<Ellipse Grid.ColumnSpan="4"
													 Fill="#FFFFFFFF"
													 HorizontalAlignment="Center"
													 Height="3"
													 StrokeThickness="0"
													 VerticalAlignment="Center"
													 Width="3" />
											<Border x:Name="DisabledVisual"
													BorderBrush="#B2FFFFFF"
													BorderThickness="1"
													Grid.ColumnSpan="4"
													CornerRadius="0,0,.5,.5"
													Opacity="0"
													Grid.Row="0"
													Grid.RowSpan="4" />
										</Grid>
									</Grid>
								</ControlTemplate>
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Button x:Name="PART_Button"
									Grid.Column="1"
									Foreground="{TemplateBinding Foreground}"
									Focusable="False"
									HorizontalAlignment="Left"
									Margin="3,0,3,0"
									Grid.Row="0"
									Template="{StaticResource DropDownButtonTemplate}"
									VerticalAlignment="Top"
									Width="20" />
							<DatePickerTextBox x:Name="PART_TextBox"
											   Grid.Column="0"
											   Focusable="{TemplateBinding Focusable}"
											   HorizontalContentAlignment="Stretch"
											   Grid.Row="0"
											   VerticalContentAlignment="Stretch"
											   FontWeight="Normal"
											   FontStyle="Normal"
											   FontSize="12" />
							<Grid x:Name="PART_DisabledVisual"
								  Grid.ColumnSpan="2"
								  Grid.Column="0"
								  IsHitTestVisible="False"
								  Opacity="0"
								  Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Rectangle Grid.Column="0"
										   Fill="#A5FFFFFF"
										   RadiusY="1"
										   Grid.Row="0"
										   RadiusX="1" />
								<Rectangle Grid.Column="1"
										   Fill="#A5FFFFFF"
										   Height="18"
										   Margin="3,0,3,0"
										   RadiusY="1"
										   Grid.Row="0"
										   RadiusX="1"
										   Width="19" />
								<Popup x:Name="PART_Popup"
									   AllowsTransparency="True"
									   Placement="Bottom"
									   PlacementTarget="{Binding ElementName=PART_TextBox}"
									   StaysOpen="False" />
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
									 Value="false">
							<Setter Property="Foreground"
									TargetName="PART_TextBox"
									Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="FocusVisual2">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2"
							   SnapsToDevicePixels="true"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   StrokeThickness="1"
							   StrokeDashArray="1 2" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Button.MouseOver.Background"
					 Color="#FFBEE6FD" />

	<Style x:Key="SideMenuButton"
		   TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle"
				Value="{StaticResource FocusVisual}" />
		<!--<Setter Property="Background"
				Value="{StaticResource Button.Static.Background}" />-->
		<Setter Property="BorderBrush"
				Value="{StaticResource Button.Static.Border}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="0"
							SnapsToDevicePixels="true">
						<DockPanel>
							<ContentPresenter DockPanel.Dock="Top"
											  x:Name="contentPresenter"
											  Focusable="False"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  VerticalAlignment="Top"
											  Height="60" />
							<Border DockPanel.Dock="Bottom"
									x:Name="menuUnderline"
									Height="7" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted"
								 Value="true">
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Background"
									TargetName="menuUnderline"
									Value="DarkGreen" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="DarkGreen" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Opacity"
									TargetName="contentPresenter"
									Value=".5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>